<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d0/d29/main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">fnmatch.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes refid="db/d45/git__utils_8h" local="yes">git_utils.h</includes>
    <includes refid="d5/d36/file__card_8h" local="yes">file_card.h</includes>
    <includes refid="d4/d6f/dir__config_8h" local="yes">dir_config.h</includes>
    <includes refid="da/d7e/args__parser_8h" local="yes">args_parser.h</includes>
    <includes refid="d9/d9a/longlisting_8h" local="yes">longlisting.h</includes>
    <includes refid="da/dca/dir__analytics_8h" local="yes">dir_analytics.h</includes>
    <includes refid="d3/df8/display__utils_8h" local="yes">display_utils.h</includes>
    <includes refid="db/d03/dev__dir__utils_8h" local="yes">dev_dir_utils.h</includes>
    <includes refid="d1/dc4/git__integration_8h" local="yes">git_integration.h</includes>
    <incdepgraph>
      <node id="15">
        <label>args_parser.h</label>
        <link refid="da/d7e/args__parser_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>dev_dir_utils.h</label>
        <link refid="db/d03/dev__dir__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>dir_analytics.h</label>
        <link refid="da/dca/dir__analytics_8h"/>
      </node>
      <node id="14">
        <label>dir_config.h</label>
        <link refid="d4/d6f/dir__config_8h"/>
      </node>
      <node id="18">
        <label>display_utils.h</label>
        <link refid="d3/df8/display__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>file_card.h</label>
        <link refid="d5/d36/file__card_8h"/>
      </node>
      <node id="20">
        <label>git_integration.h</label>
        <link refid="d1/dc4/git__integration_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>git_utils.h</label>
        <link refid="db/d45/git__utils_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>longlisting.h</label>
        <link refid="d9/d9a/longlisting_8h"/>
      </node>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c</label>
        <link refid="d0/d29/main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>dirent.h</label>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="8">
        <label>fnmatch.h</label>
      </node>
      <node id="12">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/ioctl.h</label>
      </node>
      <node id="9">
        <label>sys/stat.h</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" prot="public" static="no">
        <name>MAX_PATH</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="34" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
        <referencedby refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</referencedby>
        <referencedby refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" compoundref="d0/d29/main_8c" startline="134" endline="177">process_files_or_patterns</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="define" id="d0/d29/main_8c_1a52476dd1013f4b9201ab7a3dcb0dac9d" prot="public" static="no">
        <name>INITIAL_ENTRIES</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="35" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" compoundref="d0/d29/main_8c" startline="47" endline="64">allocate_entries</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int allocate_entries</definition>
        <argsstring>(FileCardInfo **entries, int *current_size)</argsstring>
        <name>allocate_entries</name>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>current_size</declname>
        </param>
        <briefdescription>
<para>Dynamically allocates or reallocates memory for directory entries. </para>
        </briefdescription>
        <detaileddescription>
<para>This function manages the memory for the array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures. It starts with INITIAL_ENTRIES and doubles the size when more space is needed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current size of the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="47" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="47" bodyend="64"/>
        <references refid="d0/d29/main_8c_1a52476dd1013f4b9201ab7a3dcb0dac9d" compoundref="d0/d29/main_8c" startline="35">INITIAL_ENTRIES</references>
        <referencedby refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</referencedby>
        <referencedby refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" compoundref="d0/d29/main_8c" startline="134" endline="177">process_files_or_patterns</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int process_directory</definition>
        <argsstring>(const char *dir_path, FileCardInfo **entries, int *num_entries, int *current_size)</argsstring>
        <name>process_directory</name>
        <param>
          <type>const char *</type>
          <declname>dir_path</declname>
        </param>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>current_size</declname>
        </param>
        <briefdescription>
<para>Processes directory entries and populates the entries array. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads directory contents, creates <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures for each entry, and dynamically allocates memory as needed. It also integrates Git status information.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory to process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of entries processed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current size of the entries array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="78" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="78" bodyend="119"/>
        <references refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" compoundref="d0/d29/main_8c" startline="47" endline="64">allocate_entries</references>
        <references refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" compoundref="dd/d6c/file__card_8c" startline="31" endline="54">create_file_entry</references>
        <references refid="df/d77/git__integration_8c_1ac8420e6fdcd1a0373f840ecbe95a220a" compoundref="df/d77/git__integration_8c" startline="30" endline="68">integrate_git_status</references>
        <references refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d0/d29/main_8c" startline="34">MAX_PATH</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int process_files_or_patterns</definition>
        <argsstring>(const char **patterns, int pattern_count, FileCardInfo **entries, int *num_entries, int *current_size)</argsstring>
        <name>process_files_or_patterns</name>
        <param>
          <type>const char **</type>
          <declname>patterns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pattern_count</declname>
        </param>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>current_size</declname>
        </param>
        <briefdescription>
<para>Processes files or patterns and populates the entries array. </para>
        </briefdescription>
        <detaileddescription>
<para>This function handles file patterns (including globs) and individual files, creating <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures for matching entries.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>patterns</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of file patterns or names to process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pattern_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of patterns in the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of entries processed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current size of the entries array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="134" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="134" bodyend="177"/>
        <references refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" compoundref="d0/d29/main_8c" startline="47" endline="64">allocate_entries</references>
        <references refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" compoundref="dd/d6c/file__card_8c" startline="31" endline="54">create_file_entry</references>
        <references refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d0/d29/main_8c" startline="34">MAX_PATH</references>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_directory</definition>
        <argsstring>(const char *path)</argsstring>
        <name>is_directory</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if a given path is a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the path is a directory, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="185" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="185" bodyend="190"/>
        <referencedby refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" compoundref="d0/d29/main_8c" startline="255" endline="262">is_glob_or_specific_files</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int process_target</definition>
        <argsstring>(const char *target, FileCardInfo **entries, int *num_entries, int *current_size)</argsstring>
        <name>process_target</name>
        <param>
          <type>const char *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>current_size</declname>
        </param>
        <briefdescription>
<para>Processes a single target (directory, file, or pattern). </para>
        </briefdescription>
        <detaileddescription>
<para>This function handles different types of targets: directories, glob patterns, and individual files. It populates the entries array accordingly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to process (directory path, file path, or pattern). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of entries processed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current size of the entries array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="204" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="204" bodyend="243"/>
        <references refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" compoundref="d0/d29/main_8c" startline="47" endline="64">allocate_entries</references>
        <references refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" compoundref="dd/d6c/file__card_8c" startline="31" endline="54">create_file_entry</references>
        <references refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" compoundref="d0/d29/main_8c" startline="185" endline="190">is_directory</references>
        <references refid="df/dad/args__parser_8c_1ac7b851d3c3ad6d7a78c3e0aabb176d15" compoundref="df/dad/args__parser_8c" startline="28" endline="31">is_glob_pattern</references>
        <references refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d0/d29/main_8c" startline="34">MAX_PATH</references>
        <references refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</references>
        <references refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" compoundref="d0/d29/main_8c" startline="134" endline="177">process_files_or_patterns</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_glob_or_specific_files</definition>
        <argsstring>(const char **targets, int target_count)</argsstring>
        <name>is_glob_or_specific_files</name>
        <param>
          <type>const char **</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>int</type>
          <declname>target_count</declname>
        </param>
        <briefdescription>
<para>Checks if the targets are glob patterns or specific files. </para>
        </briefdescription>
        <detaileddescription>
<para>This function determines whether the given targets include glob patterns or specific files, as opposed to just directories.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targets</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of target strings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of targets in the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if glob patterns or specific files are present, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="255" column="12" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="255" bodyend="262"/>
        <references refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" compoundref="d0/d29/main_8c" startline="185" endline="190">is_directory</references>
        <references refid="df/dad/args__parser_8c_1ac7b851d3c3ad6d7a78c3e0aabb176d15" compoundref="df/dad/args__parser_8c" startline="28" endline="31">is_glob_pattern</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main function of the facad program. </para>
        </briefdescription>
        <detaileddescription>
<para>This function serves as the entry point for the facad directory listing tool. It parses command-line arguments, processes directories or files based on the input, and displays the results using the appropriate format (standard, long listing, or analytics).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of command-line argument strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EXIT_SUCCESS on successful execution, EXIT_FAILURE on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" line="275" column="5" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c" bodystart="275" bodyend="423"/>
        <references refid="dd/d6c/file__card_8c_1aaa0d8cd7d720e6b260615df1be0fdc7f" compoundref="dd/d6c/file__card_8c" startline="134" endline="171">compare_file_entries</references>
        <references refid="da/ddb/structGitFileList_1a8a2892f47d399a67ce95ecdf0ab4a79f" compoundref="db/d45/git__utils_8h" startline="36">GitFileList::count</references>
        <references refid="d2/dda/display__utils_8c_1a8b38e99d9128bf4a4badc21df13d442b" compoundref="d2/dda/display__utils_8c" startline="108" endline="199">display_entries</references>
        <references refid="d1/d46/structGitFile_1a822b94e2dcbcc4086c35387aef4f4a57" compoundref="db/d45/git__utils_8h" startline="26">GitFile::filename</references>
        <references refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" compoundref="db/d45/git__utils_8h" startline="35">GitFileList::files</references>
        <references refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" compoundref="df/dad/args__parser_8c" startline="77" endline="82">free_args</references>
        <references refid="dd/d6c/file__card_8c_1af25b4091089527258ab9a8cb5ebff9e7" compoundref="dd/d6c/file__card_8c" startline="64" endline="68">free_file_entry</references>
        <references refid="d1/db9/git__utils_8c_1a1af8df0b83d4e26524cdb4371b7bd7a6" compoundref="d1/db9/git__utils_8c" startline="65" endline="89">get_git_status</references>
        <references refid="de/d0d/structFileCardInfo_1a194c96b36719d8cfefd81e58c527668c" compoundref="d5/d36/file__card_8h" startline="31">FileCardInfo::git_status</references>
        <references refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" compoundref="de/db5/dev__dir__utils_8c" startline="48" endline="138">handle_dev_directory</references>
        <references refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" compoundref="da/d7e/args__parser_8h" startline="31">CommandLineArgs::invalid_opt</references>
        <references refid="de/db5/dev__dir__utils_8c_1ae2390692f6e5134692701461dca8cd84" compoundref="de/db5/dev__dir__utils_8c" startline="31" endline="35">is_dev_directory</references>
        <references refid="d1/db9/git__utils_8c_1a51ae0134feff92edfd5cf268cd0b1acf" compoundref="d1/db9/git__utils_8c" startline="28" endline="40">is_git_repository</references>
        <references refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" compoundref="d0/d29/main_8c" startline="255" endline="262">is_glob_or_specific_files</references>
        <references refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d0/d29/main_8c" startline="34">MAX_PATH</references>
        <references refid="df/dad/args__parser_8c_1ae69db95445b885f269cab7f4dc062307" compoundref="df/dad/args__parser_8c" startline="43" endline="67">parse_args</references>
        <references refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</references>
        <references refid="df/dad/args__parser_8c_1ae5d62d86e562ee295d1566f9ad74b73c" compoundref="df/dad/args__parser_8c" startline="102" endline="111">print_help</references>
        <references refid="d6/d95/longlisting_8c_1a9aa67dc0ec987dacbfbc8dfe5745c5be" compoundref="d6/d95/longlisting_8c" startline="306" endline="336">print_longlisting</references>
        <references refid="d6/d95/longlisting_8c_1a1af2c63d6b774640dcf8f6b3127dfa47" compoundref="d6/d95/longlisting_8c" startline="339" endline="368">print_longlisting_files</references>
        <references refid="df/dad/args__parser_8c_1ac6230d495fc909bb61195c45f703d492" compoundref="df/dad/args__parser_8c" startline="90" endline="92">print_version</references>
        <references refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</references>
        <references refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</references>
        <references refid="de/d26/structCommandLineArgs_1ab399696f534705c62ec3d5ba045eed09" compoundref="da/d7e/args__parser_8h" startline="30">CommandLineArgs::show_dir_analytics</references>
        <references refid="de/d26/structCommandLineArgs_1a210deb76b4bf3d30f0bb09e16ba7fbe4" compoundref="da/d7e/args__parser_8h" startline="28">CommandLineArgs::show_help</references>
        <references refid="de/d26/structCommandLineArgs_1ab86308b944cadea1ed5fb0b48661a355" compoundref="da/d7e/args__parser_8h" startline="29">CommandLineArgs::show_longlisting</references>
        <references refid="de/d26/structCommandLineArgs_1a518fe65eec71814dec37b3fb872fa8a0" compoundref="da/d7e/args__parser_8h" startline="27">CommandLineArgs::show_version</references>
        <references refid="d1/d46/structGitFile_1ac3e25bcf3aad47f8c13f3a98f250b874" compoundref="db/d45/git__utils_8h" startline="27">GitFile::status</references>
        <references refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" compoundref="da/d7e/args__parser_8h" startline="33">CommandLineArgs::target_count</references>
        <references refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" compoundref="da/d7e/args__parser_8h" startline="32">CommandLineArgs::targets</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Main entry point for the facad directory listing tool. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the main function and core logic for the facad tool, which provides a colorful and feature-rich directory listing in the terminal. It handles command-line arguments, processes directories or files, and displays the results using various output formats.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>main.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Main<sp/>entry<sp/>point<sp/>for<sp/>the<sp/>facad<sp/>directory<sp/>listing<sp/>tool.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>main<sp/>function<sp/>and<sp/>core<sp/>logic<sp/>for<sp/>the<sp/>facad<sp/>tool,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>which<sp/>provides<sp/>a<sp/>colorful<sp/>and<sp/>feature-rich<sp/>directory<sp/>listing<sp/>in<sp/>the<sp/>terminal.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>It<sp/>handles<sp/>command-line<sp/>arguments,<sp/>processes<sp/>directories<sp/>or<sp/>files,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>and<sp/>displays<sp/>the<sp/>results<sp/>using<sp/>various<sp/>output<sp/>formats.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fnmatch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d45/git__utils_8h" kindref="compound">git_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/d36/file__card_8h" kindref="compound">file_card.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d6f/dir__config_8h" kindref="compound">dir_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d7e/args__parser_8h" kindref="compound">args_parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d9a/longlisting_8h" kindref="compound">longlisting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dca/dir__analytics_8h" kindref="compound">dir_analytics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/df8/display__utils_8h" kindref="compound">display_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d03/dev__dir__utils_8h" kindref="compound">dev_dir_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/dc4/git__integration_8h" kindref="compound">git_integration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PATH<sp/>4096<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>length<sp/>for<sp/>file<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="d0/d29/main_8c_1a52476dd1013f4b9201ab7a3dcb0dac9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_ENTRIES<sp/>512<sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>number<sp/>of<sp/>directory<sp/>entries<sp/>to<sp/>allocate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Dynamically<sp/>allocates<sp/>or<sp/>reallocates<sp/>memory<sp/>for<sp/>directory<sp/>entries.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>manages<sp/>the<sp/>memory<sp/>for<sp/>the<sp/>array<sp/>of<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>It<sp/>starts<sp/>with<sp/>INITIAL_ENTRIES<sp/>and<sp/>doubles<sp/>the<sp/>size<sp/>when<sp/>more<sp/>space<sp/>is<sp/>needed.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>the<sp/>array<sp/>of<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_size<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>-1<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" kindref="member">allocate_entries</ref>(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>**entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>size<sp/>(double<sp/>the<sp/>current<sp/>size<sp/>or<sp/>use<sp/>initial<sp/>size<sp/>if<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>(*entries<sp/>==<sp/>NULL)<sp/>?<sp/><ref refid="d0/d29/main_8c_1a52476dd1013f4b9201ab7a3dcb0dac9d" kindref="member">INITIAL_ENTRIES</ref><sp/>:<sp/>(*current_size<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>reallocate<sp/>memory<sp/>for<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*new_entries<sp/>=<sp/>realloc(*entries,<sp/>new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>reallocation<sp/>was<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_entries<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>entries&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>entries<sp/>pointer<sp/>and<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>*entries<sp/>=<sp/>new_entries;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>to<sp/>indicate<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Processes<sp/>directory<sp/>entries<sp/>and<sp/>populates<sp/>the<sp/>entries<sp/>array.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>reads<sp/>directory<sp/>contents,<sp/>creates<sp/>FileCardInfo<sp/>structures<sp/>for<sp/>each<sp/>entry,</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>and<sp/>dynamically<sp/>allocates<sp/>memory<sp/>as<sp/>needed.<sp/>It<sp/>also<sp/>integrates<sp/>Git<sp/>status<sp/>information.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@param<sp/>dir_path<sp/>Path<sp/>to<sp/>the<sp/>directory<sp/>to<sp/>process.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>the<sp/>array<sp/>of<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@param<sp/>num_entries<sp/>Pointer<sp/>to<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>processed.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_size<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>entries<sp/>array.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>-1<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" kindref="member">process_directory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir_path,<sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>**entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*dir<sp/>=<sp/>opendir(dir_path);<sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>directory&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>if<sp/>directory<sp/>can&apos;t<sp/>be<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*entry;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>&apos;.&apos;<sp/>and<sp/>&apos;..&apos;<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>allocate<sp/>more<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num_entries<sp/>&gt;=<sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" kindref="member">allocate_entries</ref>(entries,<sp/>current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory<sp/>before<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>full<sp/>path<sp/>for<sp/>the<sp/>current<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>dir_path,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>file<sp/>entry<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" kindref="member">create_file_entry</ref>(&amp;(*entries)[*num_entries],<sp/>entry-&gt;d_name)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Unable<sp/>to<sp/>get<sp/>info<sp/>for<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>full_path,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*num_entries)++;<sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integrate<sp/>Git<sp/>status<sp/>information<sp/>for<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d77/git__integration_8c_1ac8420e6fdcd1a0373f840ecbe95a220a" kindref="member">integrate_git_status</ref>(entries,<sp/>num_entries,<sp/>dir_path);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>to<sp/>indicate<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Processes<sp/>files<sp/>or<sp/>patterns<sp/>and<sp/>populates<sp/>the<sp/>entries<sp/>array.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>handles<sp/>file<sp/>patterns<sp/>(including<sp/>globs)<sp/>and<sp/>individual<sp/>files,</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>creating<sp/>FileCardInfo<sp/>structures<sp/>for<sp/>matching<sp/>entries.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@param<sp/>patterns<sp/>Array<sp/>of<sp/>file<sp/>patterns<sp/>or<sp/>names<sp/>to<sp/>process.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@param<sp/>pattern_count<sp/>Number<sp/>of<sp/>patterns<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>the<sp/>array<sp/>of<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>@param<sp/>num_entries<sp/>Pointer<sp/>to<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>processed.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_size<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>entries<sp/>array.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>-1<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" kindref="member">process_files_or_patterns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**patterns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern_count,<sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>**entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*dir;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*entry;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>current<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>current<sp/>directory&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>if<sp/>directory<sp/>can&apos;t<sp/>be<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>entry<sp/>matches<sp/>any<sp/>of<sp/>the<sp/>provided<sp/>patterns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pattern_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fnmatch(patterns[i],<sp/>entry-&gt;d_name,<sp/>0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>entry<sp/>matches<sp/>a<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>allocate<sp/>more<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num_entries<sp/>&gt;=<sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" kindref="member">allocate_entries</ref>(entries,<sp/>current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory<sp/>before<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>file<sp/>entry<sp/>for<sp/>the<sp/>matching<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" kindref="member">create_file_entry</ref>(&amp;(*entries)[*num_entries],<sp/>full_path)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Unable<sp/>to<sp/>get<sp/>info<sp/>for<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>full_path,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*num_entries)++;<sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*num_entries<sp/>&gt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>if<sp/>entries<sp/>were<sp/>found,<sp/>-1<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Checks<sp/>if<sp/>a<sp/>given<sp/>path<sp/>is<sp/>a<sp/>directory.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>to<sp/>check.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@return<sp/>1<sp/>if<sp/>the<sp/>path<sp/>is<sp/>a<sp/>directory,<sp/>0<sp/>otherwise.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" kindref="member">is_directory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>statbuf;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(path,<sp/>&amp;statbuf)<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>file<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>if<sp/>stat<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_ISDIR(statbuf.st_mode);<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>1<sp/>if<sp/>it&apos;s<sp/>a<sp/>directory,<sp/>0<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Processes<sp/>a<sp/>single<sp/>target<sp/>(directory,<sp/>file,<sp/>or<sp/>pattern).</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>handles<sp/>different<sp/>types<sp/>of<sp/>targets:<sp/>directories,<sp/>glob<sp/>patterns,</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>and<sp/>individual<sp/>files.<sp/>It<sp/>populates<sp/>the<sp/>entries<sp/>array<sp/>accordingly.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@param<sp/>target<sp/>The<sp/>target<sp/>to<sp/>process<sp/>(directory<sp/>path,<sp/>file<sp/>path,<sp/>or<sp/>pattern).</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>the<sp/>array<sp/>of<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@param<sp/>num_entries<sp/>Pointer<sp/>to<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>processed.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_size<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>entries<sp/>array.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>-1<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" kindref="member">process_target</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target,<sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>**entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" kindref="member">is_directory</ref>(target))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>target<sp/>is<sp/>a<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>previous_dir[<ref refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getcwd(previous_dir,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(previous_dir))<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>working<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;getcwd()<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chdir(target)<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Change<sp/>to<sp/>the<sp/>target<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>changing<sp/>to<sp/>directory<sp/>&apos;%s&apos;:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>target,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" kindref="member">process_directory</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>entries,<sp/>num_entries,<sp/>current_size);<sp/></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>back<sp/>to<sp/>the<sp/>previous<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chdir(previous_dir)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>changing<sp/>back<sp/>to<sp/>previous<sp/>directory:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/dad/args__parser_8c_1ac7b851d3c3ad6d7a78c3e0aabb176d15" kindref="member">is_glob_pattern</ref>(target))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>target<sp/>is<sp/>a<sp/>glob<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" kindref="member">process_files_or_patterns</ref>(&amp;target,<sp/>1,<sp/>entries,<sp/>num_entries,<sp/>current_size);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>it&apos;s<sp/>a<sp/>single<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>allocate<sp/>more<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num_entries<sp/>&gt;=<sp/>*current_size)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1a165f84d1d52e7a11077ff2b3ec8ba0c8" kindref="member">allocate_entries</ref>(entries,<sp/>current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>file<sp/>entry<sp/>for<sp/>the<sp/>single<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d6c/file__card_8c_1a8ac3f1a318ebad42a9d465b92e4aa598" kindref="member">create_file_entry</ref>(&amp;(*entries)[*num_entries],<sp/>target)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>get<sp/>info<sp/>for<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>target,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*num_entries)++;<sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>to<sp/>indicate<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Checks<sp/>if<sp/>the<sp/>targets<sp/>are<sp/>glob<sp/>patterns<sp/>or<sp/>specific<sp/>files.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>determines<sp/>whether<sp/>the<sp/>given<sp/>targets<sp/>include<sp/>glob<sp/>patterns</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>or<sp/>specific<sp/>files,<sp/>as<sp/>opposed<sp/>to<sp/>just<sp/>directories.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@param<sp/>targets<sp/>Array<sp/>of<sp/>target<sp/>strings.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@param<sp/>target_count<sp/>Number<sp/>of<sp/>targets<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@return<sp/>1<sp/>if<sp/>glob<sp/>patterns<sp/>or<sp/>specific<sp/>files<sp/>are<sp/>present,<sp/>0<sp/>otherwise.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" kindref="member">is_glob_or_specific_files</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**targets,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_count)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>target_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/dad/args__parser_8c_1ac7b851d3c3ad6d7a78c3e0aabb176d15" kindref="member">is_glob_pattern</ref>(targets[i])<sp/>||<sp/>!<ref refid="d0/d29/main_8c_1afd7cf5224b764819fb3a9463774482c5" kindref="member">is_directory</ref>(targets[i]))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>1<sp/>if<sp/>a<sp/>glob<sp/>pattern<sp/>or<sp/>non-directory<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>if<sp/>all<sp/>targets<sp/>are<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Main<sp/>function<sp/>of<sp/>the<sp/>facad<sp/>program.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>serves<sp/>as<sp/>the<sp/>entry<sp/>point<sp/>for<sp/>the<sp/>facad<sp/>directory<sp/>listing<sp/>tool.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>It<sp/>parses<sp/>command-line<sp/>arguments,<sp/>processes<sp/>directories<sp/>or<sp/>files<sp/>based<sp/>on<sp/>the<sp/>input,</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>and<sp/>displays<sp/>the<sp/>results<sp/>using<sp/>the<sp/>appropriate<sp/>format<sp/>(standard,<sp/>long<sp/>listing,<sp/>or<sp/>analytics).</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param<sp/>argc<sp/>Number<sp/>of<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param<sp/>argv<sp/>Array<sp/>of<sp/>command-line<sp/>argument<sp/>strings.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@return<sp/>EXIT_SUCCESS<sp/>on<sp/>successful<sp/>execution,<sp/>EXIT_FAILURE<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref><sp/>args<sp/>=<sp/><ref refid="df/dad/args__parser_8c_1ae69db95445b885f269cab7f4dc062307" kindref="member">parse_args</ref>(argc,<sp/>argv);<sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>command-line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>version<sp/>display<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1a518fe65eec71814dec37b3fb872fa8a0" kindref="member">show_version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1ac6230d495fc909bb61195c45f703d492" kindref="member">print_version</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>help<sp/>display<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1a210deb76b4bf3d30f0bb09e16ba7fbe4" kindref="member">show_help</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1ae5d62d86e562ee295d1566f9ad74b73c" kindref="member">print_help</ref>(argv[0]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>invalid<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" kindref="member">invalid_opt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>unrecognized<sp/>option<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[0],<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" kindref="member">invalid_opt</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Try<sp/>&apos;%s<sp/>--help&apos;<sp/>for<sp/>more<sp/>information.\n&quot;</highlight><highlight class="normal">,<sp/>argv[0]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>working<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>current_dir[<ref refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getcwd(current_dir,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(current_dir))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;getcwd()<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>long<sp/>listing<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1ab86308b944cadea1ed5fb0b48661a355" kindref="member">show_longlisting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" kindref="member">is_glob_or_specific_files</ref>(args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>,<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref>))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d95/longlisting_8c_1a1af2c63d6b774640dcf8f6b3127dfa47" kindref="member">print_longlisting_files</ref>(args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>,<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d95/longlisting_8c_1a9aa67dc0ec987dacbfbc8dfe5745c5be" kindref="member">print_longlisting</ref>(args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref><sp/>&gt;<sp/>0<sp/>?<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[0]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>directory<sp/>analytics<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1ab399696f534705c62ec3d5ba045eed09" kindref="member">show_dir_analytics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" kindref="member">print_dir_analytics</ref>(args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref><sp/>&gt;<sp/>0<sp/>?<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[0]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>terminal<sp/>width<sp/>for<sp/>display<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">winsize<sp/>w;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ioctl(STDOUT_FILENO,<sp/>TIOCGWINSZ,<sp/>&amp;w);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>term_width<sp/>=<sp/>w.ws_col;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>variables<sp/>for<sp/>storing<sp/>file<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*entries<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_entries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>display<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>display_path[<ref refid="d0/d29/main_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(display_path,<sp/>current_dir);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>show_path<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>determine<sp/>if<sp/>path<sp/>should<sp/>be<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>targets<sp/>if<sp/>provided,<sp/>otherwise<sp/>process<sp/>current<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show_path<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>show<sp/>path<sp/>for<sp/>specific<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>real<sp/>path<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*real_path<sp/>=<sp/>realpath(args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(real_path<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(display_path,<sp/>real_path);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(real_path);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(display_path,<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[i]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" kindref="member">process_target</ref>(args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[i],<sp/>&amp;entries,<sp/>&amp;num_entries,<sp/>&amp;current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>processing<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>args.<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>[i]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;<sp/></highlight><highlight class="comment">//<sp/>Jump<sp/>to<sp/>cleanup<sp/>if<sp/>there&apos;s<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>directory<sp/>is<sp/>/dev<sp/>and<sp/>handle<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/db5/dev__dir__utils_8c_1ae2390692f6e5134692701461dca8cd84" kindref="member">is_dev_directory</ref>(current_dir))<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(display_path,<sp/></highlight><highlight class="stringliteral">&quot;/dev&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" kindref="member">handle_dev_directory</ref>(&amp;entries,<sp/>&amp;num_entries,<sp/>&amp;current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>processing<sp/>/dev<sp/>directory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>current<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" kindref="member">process_directory</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>&amp;entries,<sp/>&amp;num_entries,<sp/>&amp;current_size)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>processing<sp/>current<sp/>directory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>case<sp/>when<sp/>no<sp/>entries<sp/>are<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_entries<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>current_dir[PATH_MAX];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getcwd(current_dir,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(current_dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>current<sp/>directory<sp/>if<sp/>it<sp/>matches<sp/>the<sp/>display<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(current_dir,<sp/>display_path)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\033[1m%s\033[0m\n&quot;</highlight><highlight class="normal">,<sp/>current_dir);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;🚫<sp/>No<sp/>files<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;🚫<sp/>No<sp/>files<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>the<sp/>entries<sp/>alphabetically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort(entries,<sp/>num_entries,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>),<sp/><ref refid="dd/d6c/file__card_8c_1aaa0d8cd7d720e6b260615df1be0fdc7f" kindref="member">compare_file_entries</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>in<sp/>a<sp/>Git<sp/>repository,<sp/>integrate<sp/>Git<sp/>status<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/db9/git__utils_8c_1a51ae0134feff92edfd5cf268cd0b1acf" kindref="member">is_git_repository</ref>())<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/ddb/structGitFileList" kindref="compound">GitFileList</ref><sp/>git_status<sp/>=<sp/><ref refid="d1/db9/git__utils_8c_1a1af8df0b83d4e26524cdb4371b7bd7a6" kindref="member">get_git_status</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_entries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a8a2892f47d399a67ce95ecdf0ab4a79f" kindref="member">count</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>file<sp/>names<sp/>and<sp/>set<sp/>Git<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entries[i].name,<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" kindref="member">files</ref>[j].<ref refid="d1/d46/structGitFile_1a822b94e2dcbcc4086c35387aef4f4a57" kindref="member">filename</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[i].<ref refid="de/d0d/structFileCardInfo_1a194c96b36719d8cfefd81e58c527668c" kindref="member">git_status</ref>[0]<sp/>=<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" kindref="member">files</ref>[j].<ref refid="d1/d46/structGitFile_1ac3e25bcf3aad47f8c13f3a98f250b874" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[i].<ref refid="de/d0d/structFileCardInfo_1a194c96b36719d8cfefd81e58c527668c" kindref="member">git_status</ref>[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>entries<sp/>using<sp/>the<sp/>appropriate<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dda/display__utils_8c_1a8b38e99d9128bf4a4badc21df13d442b" kindref="member">display_entries</ref>(entries,<sp/>num_entries,<sp/>term_width,<sp/>display_path,<sp/>show_path);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">cleanup:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>allocated<sp/>memory<sp/>for<sp/>each<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_entries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d6c/file__card_8c_1af25b4091089527258ab9a8cb5ebff9e7" kindref="member">free_file_entry</ref>(&amp;entries[i]);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>free(entries);<sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>main<sp/>entries<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dad/args__parser_8c_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(&amp;args);<sp/></highlight><highlight class="comment">//<sp/>Free<sp/>command-line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>if<sp/>entries<sp/>were<sp/>found,<sp/>failure<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_entries<sp/>&gt;<sp/>0<sp/>?<sp/>EXIT_SUCCESS<sp/>:<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c"/>
  </compounddef>
</doxygen>
