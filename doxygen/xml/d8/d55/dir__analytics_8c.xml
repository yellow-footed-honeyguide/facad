<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d8/d55/dir__analytics_8c" kind="file" language="C++">
    <compoundname>dir_analytics.c</compoundname>
    <includes local="no">pwd.h</includes>
    <includes local="no">grp.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes refid="d7/d97/emoji__utils_8h" local="yes">emoji_utils.h</includes>
    <includes refid="da/dca/dir__analytics_8h" local="yes">dir_analytics.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c</label>
        <link refid="d8/d55/dir__analytics_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>dir_analytics.h</label>
        <link refid="da/dca/dir__analytics_8h"/>
      </node>
      <node id="13">
        <label>emoji_utils.h</label>
        <link refid="d7/d97/emoji__utils_8h"/>
      </node>
      <node id="8">
        <label>dirent.h</label>
      </node>
      <node id="11">
        <label>errno.h</label>
      </node>
      <node id="12">
        <label>fcntl.h</label>
      </node>
      <node id="3">
        <label>grp.h</label>
      </node>
      <node id="2">
        <label>pwd.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>sys/stat.h</label>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" prot="public" static="no">
        <name>MAX_PATH</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="28" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="28" bodyend="-1"/>
        <referencedby refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" compoundref="d8/d55/dir__analytics_8c" startline="115" endline="160">calculate_total_size</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" compoundref="d8/d55/dir__analytics_8c" startline="170" endline="199">find_largest_file</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" compoundref="d8/d55/dir__analytics_8c" startline="79" endline="107">recursive_dir_scan</referencedby>
      </memberdef>
      <memberdef kind="define" id="d8/d55/dir__analytics_8c_1a2c5eecb22513a88c24ae5831a3265e54" prot="public" static="no">
        <name>MAX_FILES</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="29" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="29" bodyend="-1"/>
        <referencedby refid="d1/db9/git__utils_8c_1a1af8df0b83d4e26524cdb4371b7bd7a6" compoundref="d1/db9/git__utils_8c" startline="65" endline="89">get_git_status</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="define" id="d8/d55/dir__analytics_8c_1a46587b83544b8e9be045bb93f644ac82" prot="public" static="no">
        <name>ANSI_BOLD</name>
        <initializer>&quot;\033[1m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="32" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="32" bodyend="-1"/>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="define" id="d8/d55/dir__analytics_8c_1af77a445894f2f750d43cf2182cd29e55" prot="public" static="no">
        <name>ANSI_RESET</name>
        <initializer>&quot;\033[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="33" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="33" bodyend="-1"/>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * format_size</definition>
        <argsstring>(off_t size)</argsstring>
        <name>format_size</name>
        <param>
          <type>off_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Formats a file size into a human-readable string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes to format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a static buffer containing the formatted size string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="41" column="13" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="41" bodyend="56"/>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * format_time</definition>
        <argsstring>(time_t t)</argsstring>
        <name>format_time</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Formats a time_t value into a human-readable string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time_t value to format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a static buffer containing the formatted time string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="64" column="13" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="64" bodyend="69"/>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void recursive_dir_scan</definition>
        <argsstring>(const char *path, int *max_depth, int current_depth, char *deepest_dir)</argsstring>
        <name>recursive_dir_scan</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>max_depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_depth</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>deepest_dir</declname>
        </param>
        <briefdescription>
<para>Recursively scans a directory to find its maximum depth. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the directory to scan. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_depth</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current maximum depth. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The current depth in the recursion. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deepest_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the path of the deepest directory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="79" column="13" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="79" bodyend="107"/>
        <references refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d8/d55/dir__analytics_8c" startline="28">MAX_PATH</references>
        <references refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" compoundref="d8/d55/dir__analytics_8c" startline="79" endline="107">recursive_dir_scan</references>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" compoundref="d8/d55/dir__analytics_8c" startline="79" endline="107">recursive_dir_scan</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>off_t</type>
        <definition>static off_t calculate_total_size</definition>
        <argsstring>(const char *path)</argsstring>
        <name>calculate_total_size</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Calculates the total size of a directory and its contents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the directory to analyze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The total size of the directory in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="115" column="14" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="115" bodyend="160"/>
        <references refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" compoundref="d8/d55/dir__analytics_8c" startline="115" endline="160">calculate_total_size</references>
        <references refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d8/d55/dir__analytics_8c" startline="28">MAX_PATH</references>
        <referencedby refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" compoundref="d8/d55/dir__analytics_8c" startline="115" endline="160">calculate_total_size</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void find_largest_file</definition>
        <argsstring>(const char *path, off_t *largest_size, char *largest_file, size_t largest_file_size)</argsstring>
        <name>find_largest_file</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>off_t *</type>
          <declname>largest_size</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>largest_file</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>largest_file_size</declname>
        </param>
        <briefdescription>
<para>Recursively finds the largest file in a directory and its subdirectories. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the directory to scan. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>largest_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the size of the largest file found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>largest_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the path of the largest file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>largest_file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the largest_file buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="170" column="13" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="170" bodyend="199"/>
        <references refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" compoundref="d8/d55/dir__analytics_8c" startline="170" endline="199">find_largest_file</references>
        <references refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d8/d55/dir__analytics_8c" startline="28">MAX_PATH</references>
        <referencedby refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" compoundref="d8/d55/dir__analytics_8c" startline="170" endline="199">find_largest_file</referencedby>
        <referencedby refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" compoundref="d8/d55/dir__analytics_8c" startline="211" endline="300">print_dir_analytics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_dir_analytics</definition>
        <argsstring>(const char *path)</argsstring>
        <name>print_dir_analytics</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Prints detailed analytics about a directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function analyzes the contents of the specified directory and prints various statistics including total size, file counts, directory depth, and information about largest and newest files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the directory to analyze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" line="211" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c" bodystart="211" bodyend="300"/>
        <references refid="d8/d55/dir__analytics_8c_1a46587b83544b8e9be045bb93f644ac82" compoundref="d8/d55/dir__analytics_8c" startline="32">ANSI_BOLD</references>
        <references refid="d8/d55/dir__analytics_8c_1af77a445894f2f750d43cf2182cd29e55" compoundref="d8/d55/dir__analytics_8c" startline="33">ANSI_RESET</references>
        <references refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" compoundref="d8/d55/dir__analytics_8c" startline="115" endline="160">calculate_total_size</references>
        <references refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" compoundref="d8/d55/dir__analytics_8c" startline="170" endline="199">find_largest_file</references>
        <references refid="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" compoundref="d8/d55/dir__analytics_8c" startline="41" endline="56">format_size</references>
        <references refid="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" compoundref="d8/d55/dir__analytics_8c" startline="64" endline="69">format_time</references>
        <references refid="d8/d55/dir__analytics_8c_1a2c5eecb22513a88c24ae5831a3265e54" compoundref="d8/d55/dir__analytics_8c" startline="29">MAX_FILES</references>
        <references refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="d8/d55/dir__analytics_8c" startline="28">MAX_PATH</references>
        <references refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" compoundref="d8/d55/dir__analytics_8c" startline="79" endline="107">recursive_dir_scan</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of directory analytics functionality. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains functions for analyzing directory contents, including calculation of total size, file counts, depth analysis, and identification of largest and newest files.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>dir_analytics.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>directory<sp/>analytics<sp/>functionality.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>functions<sp/>for<sp/>analyzing<sp/>directory<sp/>contents,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>including<sp/>calculation<sp/>of<sp/>total<sp/>size,<sp/>file<sp/>counts,<sp/>depth<sp/>analysis,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>and<sp/>identification<sp/>of<sp/>largest<sp/>and<sp/>newest<sp/>files.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;grp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d97/emoji__utils_8h" kindref="compound">emoji_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dca/dir__analytics_8h" kindref="compound">dir_analytics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PATH<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="d8/d55/dir__analytics_8c_1a2c5eecb22513a88c24ae5831a3265e54" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_FILES<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ANSI<sp/>escape<sp/>codes<sp/>for<sp/>text<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="d8/d55/dir__analytics_8c_1a46587b83544b8e9be045bb93f644ac82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANSI_BOLD<sp/>&quot;\033[1m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="d8/d55/dir__analytics_8c_1af77a445894f2f750d43cf2182cd29e55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANSI_RESET<sp/>&quot;\033[0m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Formats<sp/>a<sp/>file<sp/>size<sp/>into<sp/>a<sp/>human-readable<sp/>string.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@param<sp/>size<sp/>The<sp/>size<sp/>in<sp/>bytes<sp/>to<sp/>format.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>buffer<sp/>containing<sp/>the<sp/>formatted<sp/>size<sp/>string.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" kindref="member">format_size</ref>(off_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dsize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>size<sp/>to<sp/>appropriate<sp/>unit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dsize<sp/>&gt;=<sp/>1024<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsize<sp/>/=<sp/>1024;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>the<sp/>size<sp/>with<sp/>one<sp/>decimal<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%.1f%s&quot;</highlight><highlight class="normal">,<sp/>dsize,<sp/>units[i]);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Formats<sp/>a<sp/>time_t<sp/>value<sp/>into<sp/>a<sp/>human-readable<sp/>string.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@param<sp/>t<sp/>The<sp/>time_t<sp/>value<sp/>to<sp/>format.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>buffer<sp/>containing<sp/>the<sp/>formatted<sp/>time<sp/>string.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" kindref="member">format_time</ref>(time_t<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[20];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm*<sp/>tm_info<sp/>=<sp/>localtime(&amp;t);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>strftime(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">,<sp/>tm_info);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Recursively<sp/>scans<sp/>a<sp/>directory<sp/>to<sp/>find<sp/>its<sp/>maximum<sp/>depth.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>of<sp/>the<sp/>directory<sp/>to<sp/>scan.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@param<sp/>max_depth<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>maximum<sp/>depth.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_depth<sp/>The<sp/>current<sp/>depth<sp/>in<sp/>the<sp/>recursion.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>@param<sp/>deepest_dir<sp/>Buffer<sp/>to<sp/>store<sp/>the<sp/>path<sp/>of<sp/>the<sp/>deepest<sp/>directory.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" kindref="member">recursive_dir_scan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>max_depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_depth,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>deepest_dir)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR*<sp/>dir;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent*<sp/>entry;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(path);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>.<sp/>and<sp/>..<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(full_path,<sp/>&amp;st)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>S_ISDIR(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_depth<sp/>=<sp/>current_depth<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>max_depth<sp/>and<sp/>deepest_dir<sp/>if<sp/>a<sp/>new<sp/>maximum<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_depth<sp/>&gt;<sp/>*max_depth)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*max_depth<sp/>=<sp/>new_depth;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(deepest_dir,<sp/>full_path,<sp/><ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deepest_dir[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref><sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursively<sp/>scan<sp/>subdirectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" kindref="member">recursive_dir_scan</ref>(full_path,<sp/>max_depth,<sp/>new_depth,<sp/>deepest_dir);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Calculates<sp/>the<sp/>total<sp/>size<sp/>of<sp/>a<sp/>directory<sp/>and<sp/>its<sp/>contents.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>of<sp/>the<sp/>directory<sp/>to<sp/>analyze.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>total<sp/>size<sp/>of<sp/>the<sp/>directory<sp/>in<sp/>bytes.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>off_t<sp/><ref refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" kindref="member">calculate_total_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR*<sp/>dir;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent*<sp/>entry;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>total_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>block_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>filesystem<sp/>block<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_size<sp/>=<sp/>512;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ST_BLKSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">statvfs<sp/>buf;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statvfs(path,<sp/>&amp;buf)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_size<sp/>=<sp/>buf.f_frsize;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(path);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>directory<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(full_path,<sp/>&amp;st)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISDIR(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursively<sp/>calculate<sp/>size<sp/>for<sp/>subdirectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_size<sp/>+=<sp/><ref refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" kindref="member">calculate_total_size</ref>(full_path);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISREG(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>file<sp/>size,<sp/>rounded<sp/>up<sp/>to<sp/>the<sp/>nearest<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_size<sp/>+=<sp/>(st.st_blocks<sp/>*<sp/>512<sp/>+<sp/>block_size<sp/>-<sp/>1)<sp/>/<sp/>block_size<sp/>*<sp/>block_size;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>symbolic<sp/>links<sp/>and<sp/>other<sp/>special<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>stating<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>full_path,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_size;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Recursively<sp/>finds<sp/>the<sp/>largest<sp/>file<sp/>in<sp/>a<sp/>directory<sp/>and<sp/>its<sp/>subdirectories.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>of<sp/>the<sp/>directory<sp/>to<sp/>scan.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@param<sp/>largest_size<sp/>Pointer<sp/>to<sp/>store<sp/>the<sp/>size<sp/>of<sp/>the<sp/>largest<sp/>file<sp/>found.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>@param<sp/>largest_file<sp/>Buffer<sp/>to<sp/>store<sp/>the<sp/>path<sp/>of<sp/>the<sp/>largest<sp/>file.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>@param<sp/>largest_file_size<sp/>Size<sp/>of<sp/>the<sp/>largest_file<sp/>buffer.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" kindref="member">find_largest_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/>off_t*<sp/>largest_size,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>largest_file,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>largest_file_size)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR*<sp/>dir;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent*<sp/>entry;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(path);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(full_path,<sp/>&amp;st)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISDIR(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursively<sp/>scan<sp/>subdirectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" kindref="member">find_largest_file</ref>(full_path,<sp/>largest_size,<sp/>largest_file,<sp/>largest_file_size);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISREG(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>file<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>current<sp/>largest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.st_size<sp/>&gt;<sp/>*largest_size)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*largest_size<sp/>=<sp/>st.st_size;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(largest_file,<sp/>full_path,<sp/>largest_file_size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_file[largest_file_size<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Prints<sp/>detailed<sp/>analytics<sp/>about<sp/>a<sp/>directory.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>analyzes<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>specified<sp/>directory</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>and<sp/>prints<sp/>various<sp/>statistics<sp/>including<sp/>total<sp/>size,<sp/>file<sp/>counts,</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>directory<sp/>depth,<sp/>and<sp/>information<sp/>about<sp/>largest<sp/>and<sp/>newest<sp/>files.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>of<sp/>the<sp/>directory<sp/>to<sp/>analyze.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d55/dir__analytics_8c_1ab481a931e3944eefb982e2666223d3d5" kindref="member">print_dir_analytics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR*<sp/>dir;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent*<sp/>entry;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>largest_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_files<sp/>=<sp/>0,<sp/>total_dirs<sp/>=<sp/>0,<sp/>empty_files<sp/>=<sp/>0,<sp/>max_depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>newest_time<sp/>=<sp/>0,<sp/>oldest_time<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>largest_file[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>newest_file[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>oldest_file[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>empty_file_names[<ref refid="d8/d55/dir__analytics_8c_1a2c5eecb22513a88c24ae5831a3265e54" kindref="member">MAX_FILES</ref>][256];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>deepest_dir[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(path);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>largest<sp/>file<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d55/dir__analytics_8c_1a65261c711a51d2667c1726615395d524" kindref="member">find_largest_file</ref>(path,<sp/>&amp;largest_size,<sp/>largest_file,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(largest_file));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>total<sp/>size<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>total_size<sp/>=<sp/><ref refid="d8/d55/dir__analytics_8c_1a247c94a71c4183e613d8a5329615c165" kindref="member">calculate_total_size</ref>(path);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>entry-&gt;d_name);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(full_path,<sp/>&amp;st)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISDIR(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_dirs++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISREG(st.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_files++;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>largest<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.st_size<sp/>&gt;<sp/>largest_size)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_size<sp/>=<sp/>st.st_size;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(largest_file,<sp/>entry-&gt;d_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(largest_file)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>newest<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.st_mtime<sp/>&gt;<sp/>newest_time)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newest_time<sp/>=<sp/>st.st_mtime;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(newest_file,<sp/>entry-&gt;d_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(newest_file)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>oldest<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.st_mtime<sp/>&lt;<sp/>oldest_time)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldest_time<sp/>=<sp/>st.st_mtime;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(oldest_file,<sp/>entry-&gt;d_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(oldest_file)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>empty<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.st_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(empty_file_names[empty_files],<sp/>entry-&gt;d_name,<sp/>255);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_file_names[empty_files][255]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_files++;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>max<sp/>depth<sp/>and<sp/>find<sp/>deepest<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d55/dir__analytics_8c_1a8ed5df60e8023eb58017d81b7642b2d4" kindref="member">recursive_dir_scan</ref>(path,<sp/>&amp;max_depth,<sp/>0,<sp/>deepest_dir);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cwd[<ref refid="d8/d55/dir__analytics_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getcwd(cwd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cwd))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;getcwd()<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>analytics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s%s%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/d55/dir__analytics_8c_1a46587b83544b8e9be045bb93f644ac82" kindref="member">ANSI_BOLD</ref>,<sp/>cwd,<sp/><ref refid="d8/d55/dir__analytics_8c_1af77a445894f2f750d43cf2182cd29e55" kindref="member">ANSI_RESET</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🧮<sp/>Total<sp/>Size<sp/><sp/><sp/><sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" kindref="member">format_size</ref>(total_size));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🗂️<sp/>Directories<sp/><sp/><sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>total_dirs);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🌳<sp/>Max<sp/>Depth<sp/><sp/><sp/><sp/><sp/>:<sp/>%d<sp/>levels\n&quot;</highlight><highlight class="normal">,<sp/>max_depth);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;📁<sp/>Deepest<sp/>Dir<sp/><sp/><sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>deepest_dir);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🗃️<sp/>Files<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>total_files);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🐘<sp/>Largest<sp/>File<sp/><sp/>:<sp/>%s<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>largest_file,<sp/><ref refid="d8/d55/dir__analytics_8c_1a33a98d6f57285ecc9ccbd6c2f2b4fd9d" kindref="member">format_size</ref>(largest_size));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🏺<sp/>Oldest<sp/>File<sp/><sp/><sp/>:<sp/>%s<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>oldest_file,<sp/><ref refid="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" kindref="member">format_time</ref>(oldest_time));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;🆕<sp/>Newest<sp/>File<sp/><sp/><sp/>:<sp/>%s<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>newest_file,<sp/><ref refid="d8/d55/dir__analytics_8c_1af2d4fbcabe2bb660a865a1a3beb3ee18" kindref="member">format_time</ref>(newest_time));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;📭<sp/>Empty<sp/>Files<sp/><sp/><sp/>:<sp/>%d<sp/>[&quot;</highlight><highlight class="normal">,<sp/>empty_files);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>names<sp/>of<sp/>empty<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>empty_files;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>empty_file_names[i],<sp/>(i<sp/>+<sp/>1<sp/>&lt;<sp/>empty_files)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dir_analytics.c"/>
  </compounddef>
</doxygen>
