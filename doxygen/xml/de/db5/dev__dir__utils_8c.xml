<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="de/db5/dev__dir__utils_8c" kind="file" language="C++">
    <compoundname>dev_dir_utils.c</compoundname>
    <includes local="no">dirent.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="db/d03/dev__dir__utils_8h" local="yes">dev_dir_utils.h</includes>
    <includes refid="d7/d97/emoji__utils_8h" local="yes">emoji_utils.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c</label>
        <link refid="de/db5/dev__dir__utils_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dev_dir_utils.h</label>
        <link refid="db/d03/dev__dir__utils_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>emoji_utils.h</label>
        <link refid="d7/d97/emoji__utils_8h"/>
      </node>
      <node id="9">
        <label>file_card.h</label>
        <link refid="d5/d36/file__card_8h"/>
      </node>
      <node id="2">
        <label>dirent.h</label>
      </node>
      <node id="7">
        <label>errno.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="de/db5/dev__dir__utils_8c_1ab99ded389af74001a6298fc9e44e74e5" prot="public" static="no">
        <name>MAX_PATH</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" line="22" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" bodystart="22" bodyend="-1"/>
        <referencedby refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" compoundref="de/db5/dev__dir__utils_8c" startline="48" endline="138">handle_dev_directory</referencedby>
      </memberdef>
      <memberdef kind="define" id="de/db5/dev__dir__utils_8c_1adc1bba58529e2173c154c4857d243eb5" prot="public" static="no">
        <name>INITIAL_DEV_ENTRIES</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" line="23" column="9" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" bodystart="23" bodyend="-1"/>
        <referencedby refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" compoundref="de/db5/dev__dir__utils_8c" startline="48" endline="138">handle_dev_directory</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="de/db5/dev__dir__utils_8c_1ae2390692f6e5134692701461dca8cd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_dev_directory</definition>
        <argsstring>(const char *path)</argsstring>
        <name>is_dev_directory</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if the given path is the /dev directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the specified path is the /dev directory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the path is &quot;/dev&quot;, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" line="31" column="5" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" bodystart="31" bodyend="35"/>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int handle_dev_directory</definition>
        <argsstring>(FileCardInfo **entries, int *num_entries, int *current_size)</argsstring>
        <name>handle_dev_directory</name>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>current_size</declname>
        </param>
        <briefdescription>
<para>Processes the contents of the /dev directory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads the entries in the /dev directory, creates <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures for each entry, and stores them in the provided array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> pointers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of entries in the array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current size of the array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" line="48" column="5" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c" bodystart="48" bodyend="138"/>
        <references refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" compoundref="d5/d36/file__card_8h" startline="28">FileCardInfo::emoji</references>
        <references refid="d0/dc9/emoji__utils_8c_1ad5d8cf69e853f8e2c380ce1e0b2da0da" compoundref="d0/dc9/emoji__utils_8c" startline="45" endline="62">get_dev_emoji</references>
        <references refid="de/db5/dev__dir__utils_8c_1adc1bba58529e2173c154c4857d243eb5" compoundref="de/db5/dev__dir__utils_8c" startline="23">INITIAL_DEV_ENTRIES</references>
        <references refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" compoundref="d5/d36/file__card_8h" startline="29">FileCardInfo::is_directory</references>
        <references refid="de/d0d/structFileCardInfo_1a0976436903b23e6cdd4deb1052b8e6ab" compoundref="d5/d36/file__card_8h" startline="30">FileCardInfo::is_hidden</references>
        <references refid="de/db5/dev__dir__utils_8c_1ab99ded389af74001a6298fc9e44e74e5" compoundref="de/db5/dev__dir__utils_8c" startline="22">MAX_PATH</references>
        <references refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" compoundref="d5/d36/file__card_8h" startline="27">FileCardInfo::name</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Utility functions for handling the /dev directory. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains functions to identify and process entries in the /dev directory, which contains device files on Unix-like systems.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>dev_dir_utils.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Utility<sp/>functions<sp/>for<sp/>handling<sp/>the<sp/>/dev<sp/>directory</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>functions<sp/>to<sp/>identify<sp/>and<sp/>process<sp/>entries<sp/>in<sp/>the<sp/>/dev</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>directory,<sp/>which<sp/>contains<sp/>device<sp/>files<sp/>on<sp/>Unix-like<sp/>systems.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d03/dev__dir__utils_8h" kindref="compound">dev_dir_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d97/emoji__utils_8h" kindref="compound">emoji_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="de/db5/dev__dir__utils_8c_1ab99ded389af74001a6298fc9e44e74e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PATH<sp/>4096<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>path<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="de/db5/dev__dir__utils_8c_1adc1bba58529e2173c154c4857d243eb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_DEV_ENTRIES<sp/>64<sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>number<sp/>of<sp/>entries<sp/>for<sp/>/dev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Checks<sp/>if<sp/>the<sp/>given<sp/>path<sp/>is<sp/>the<sp/>/dev<sp/>directory</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>The<sp/>path<sp/>to<sp/>check</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>@return<sp/>1<sp/>if<sp/>the<sp/>path<sp/>is<sp/>&quot;/dev&quot;,<sp/>0<sp/>otherwise</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="de/db5/dev__dir__utils_8c_1ae2390692f6e5134692701461dca8cd84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/db5/dev__dir__utils_8c_1ae2390692f6e5134692701461dca8cd84" kindref="member">is_dev_directory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>given<sp/>path<sp/>with<sp/>&quot;/dev&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(path,<sp/></highlight><highlight class="stringliteral">&quot;/dev&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Processes<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>/dev<sp/>directory</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>reads<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>/dev<sp/>directory,<sp/>creates<sp/>FileCardInfo</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>structures<sp/>for<sp/>each<sp/>entry,<sp/>and<sp/>stores<sp/>them<sp/>in<sp/>the<sp/>provided<sp/>array.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>FileCardInfo<sp/>pointers</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@param<sp/>num_entries<sp/>Pointer<sp/>to<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_size<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>-1<sp/>on<sp/>failure</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/db5/dev__dir__utils_8c_1acf9fb4da0ced0c99e368f3cd1ef91547" kindref="member">handle_dev_directory</ref>(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>**entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*num_entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*current_size)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*dir<sp/>=<sp/>opendir(</highlight><highlight class="stringliteral">&quot;/dev&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>/dev<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>/dev&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>if<sp/>opening<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*d_entry;<sp/><sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>to<sp/>hold<sp/>directory<sp/>entry<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>full_path[<ref refid="de/db5/dev__dir__utils_8c_1ab99ded389af74001a6298fc9e44e74e5" kindref="member">MAX_PATH</ref>];<sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>store<sp/>full<sp/>path<sp/>of<sp/>each<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;<sp/><sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>to<sp/>hold<sp/>file<sp/>status<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>entries<sp/>if<sp/>not<sp/>already<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*entries<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*entries<sp/>=<sp/>malloc(<ref refid="de/db5/dev__dir__utils_8c_1adc1bba58529e2173c154c4857d243eb5" kindref="member">INITIAL_DEV_ENTRIES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>));<sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>initial<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*entries<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>initial<sp/>memory<sp/>for<sp/>/dev<sp/>entries&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>if<sp/>allocation<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*current_size<sp/>=<sp/><ref refid="de/db5/dev__dir__utils_8c_1adc1bba58529e2173c154c4857d243eb5" kindref="member">INITIAL_DEV_ENTRIES</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>current<sp/>size<sp/>to<sp/>initial<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((d_entry<sp/>=<sp/>readdir(dir))<sp/>!=<sp/>NULL)<sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(d_entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(d_entry-&gt;d_name,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>.<sp/>and<sp/>..<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>allocate<sp/>more<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num_entries<sp/>&gt;=<sp/>*current_size)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>*current_size<sp/>*<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>Double<sp/>the<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*new_entries<sp/>=<sp/>realloc(*entries,<sp/>new_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>));<sp/><sp/></highlight><highlight class="comment">//<sp/>Reallocate<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_entries)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>reallocate<sp/>memory<sp/>for<sp/>/dev<sp/>entries:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*entries<sp/>=<sp/>new_entries;<sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>entries<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*current_size<sp/>=<sp/>new_size;<sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>full<sp/>path<sp/>to<sp/>the<sp/>file<sp/>in<sp/>/dev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(full_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(full_path),<sp/></highlight><highlight class="stringliteral">&quot;/dev/%s&quot;</highlight><highlight class="normal">,<sp/>d_entry-&gt;d_name);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstat(full_path,<sp/>&amp;st)<sp/>==<sp/>0)<sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>file<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*entry<sp/>=<sp/>&amp;((*entries)[*num_entries]);<sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>pointer<sp/>to<sp/>current<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" kindref="member">name</ref><sp/>=<sp/>strdup(d_entry-&gt;d_name);<sp/><sp/></highlight><highlight class="comment">//<sp/>Duplicate<sp/>the<sp/>entry<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" kindref="member">name</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;strdup&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>if<sp/>strdup<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" kindref="member">is_directory</ref><sp/>=<sp/>S_ISDIR(st.st_mode);<sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it&apos;s<sp/>a<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a0976436903b23e6cdd4deb1052b8e6ab" kindref="member">is_hidden</ref><sp/>=<sp/>(d_entry-&gt;d_name[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it&apos;s<sp/>a<sp/>hidden<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISLNK(st.st_mode))<sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it&apos;s<sp/>a<sp/>symbolic<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" kindref="member">emoji</ref><sp/>=<sp/>strdup(entry-&gt;<ref refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" kindref="member">is_directory</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;🔗📁&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;🔗&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>link<sp/>emoji</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" kindref="member">is_directory</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" kindref="member">emoji</ref><sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;📁&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>folder<sp/>emoji<sp/>for<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" kindref="member">emoji</ref><sp/>=<sp/><ref refid="d0/dc9/emoji__utils_8c_1ad5d8cf69e853f8e2c380ce1e0b2da0da" kindref="member">get_dev_emoji</ref>(d_entry-&gt;d_name);<sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>appropriate<sp/>emoji<sp/>for<sp/>device<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" kindref="member">emoji</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>emoji:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(entry-&gt;<ref refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" kindref="member">name</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>allocated<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(dir);<sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>-1<sp/>to<sp/>indicate<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*num_entries)++;<sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);<sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>to<sp/>indicate<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c"/>
  </compounddef>
</doxygen>
