<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="df/d77/git__integration_8c" kind="file" language="C++">
    <compoundname>git_integration.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">libgen.h</includes>
    <includes refid="d1/dc4/git__integration_8h" local="yes">git_integration.h</includes>
    <incdepgraph>
      <node id="7">
        <label>file_card.h</label>
        <link refid="d5/d36/file__card_8h"/>
      </node>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.c</label>
        <link refid="df/d77/git__integration_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>git_integration.h</label>
        <link refid="d1/dc4/git__integration_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>git_utils.h</label>
        <link refid="db/d45/git__utils_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libgen.h</label>
      </node>
      <node id="9">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="df/d77/git__integration_8c_1ac8420e6fdcd1a0373f840ecbe95a220a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void integrate_git_status</definition>
        <argsstring>(FileCardInfo **entries, int *num_entries, const char *current_dir)</argsstring>
        <name>integrate_git_status</name>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> **</type>
          <declname>entries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_entries</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>current_dir</declname>
        </param>
        <briefdescription>
<para>Integrates Git status information into file entries. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the Git status for files in the current directory and updates the corresponding <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures with this information.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the number of entries in the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The current directory path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.c" line="30" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.c" bodystart="30" bodyend="68"/>
        <references refid="da/ddb/structGitFileList_1a8a2892f47d399a67ce95ecdf0ab4a79f" compoundref="db/d45/git__utils_8h" startline="36">GitFileList::count</references>
        <references refid="d1/d46/structGitFile_1a822b94e2dcbcc4086c35387aef4f4a57" compoundref="db/d45/git__utils_8h" startline="26">GitFile::filename</references>
        <references refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" compoundref="db/d45/git__utils_8h" startline="35">GitFileList::files</references>
        <references refid="d1/db9/git__utils_8c_1a1af8df0b83d4e26524cdb4371b7bd7a6" compoundref="d1/db9/git__utils_8c" startline="65" endline="89">get_git_status</references>
        <references refid="d1/db9/git__utils_8c_1a51ae0134feff92edfd5cf268cd0b1acf" compoundref="d1/db9/git__utils_8c" startline="28" endline="40">is_git_repository</references>
        <references refid="db/d45/git__utils_8h_1abe0ec333b60117063f9b9fd9f849cb08" compoundref="db/d45/git__utils_8h" startline="18">MAX_FILENAME</references>
        <references refid="d1/d46/structGitFile_1ac3e25bcf3aad47f8c13f3a98f250b874" compoundref="db/d45/git__utils_8h" startline="27">GitFile::status</references>
        <referencedby refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of Git integration for file entries. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains functions for integrating Git status information into the file entries displayed by the facad tool. It provides functionality to retrieve and apply Git status to <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structures.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>git_integration.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>Git<sp/>integration<sp/>for<sp/>file<sp/>entries.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>functions<sp/>for<sp/>integrating<sp/>Git<sp/>status<sp/>information</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>file<sp/>entries<sp/>displayed<sp/>by<sp/>the<sp/>facad<sp/>tool.<sp/>It<sp/>provides<sp/>functionality</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>to<sp/>retrieve<sp/>and<sp/>apply<sp/>Git<sp/>status<sp/>to<sp/>FileCardInfo<sp/>structures.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libgen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/dc4/git__integration_8h" kindref="compound">git_integration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Integrates<sp/>Git<sp/>status<sp/>information<sp/>into<sp/>file<sp/>entries.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>retrieves<sp/>the<sp/>Git<sp/>status<sp/>for<sp/>files<sp/>in<sp/>the<sp/>current<sp/>directory</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>and<sp/>updates<sp/>the<sp/>corresponding<sp/>FileCardInfo<sp/>structures<sp/>with<sp/>this<sp/>information.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>@param<sp/>entries<sp/>Pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>FileCardInfo<sp/>pointers.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@param<sp/>num_entries<sp/>Pointer<sp/>to<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>@param<sp/>current_dir<sp/>The<sp/>current<sp/>directory<sp/>path.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="df/d77/git__integration_8c_1ac8420e6fdcd1a0373f840ecbe95a220a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d77/git__integration_8c_1ac8420e6fdcd1a0373f840ecbe95a220a" kindref="member">integrate_git_status</ref>(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>**<sp/>entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>num_entries,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>current_dir)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>directory<sp/>is<sp/>a<sp/>Git<sp/>repository</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d1/db9/git__utils_8c_1a51ae0134feff92edfd5cf268cd0b1acf" kindref="member">is_git_repository</ref>())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>return<sp/>without<sp/>doing<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>Git<sp/>status<sp/>for<sp/>all<sp/>files<sp/>in<sp/>the<sp/>repository</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/ddb/structGitFileList" kindref="compound">GitFileList</ref><sp/>git_status<sp/>=<sp/><ref refid="d1/db9/git__utils_8c_1a1af8df0b83d4e26524cdb4371b7bd7a6" kindref="member">get_git_status</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>current<sp/>directory<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>base_dir<sp/>=<sp/>strdup(current_dir);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>base<sp/>name<sp/>of<sp/>the<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dir_name<sp/>=<sp/>basename(base_dir);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>all<sp/>file<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>*num_entries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Git<sp/>status<sp/>as<sp/>empty<sp/>for<sp/>each<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*entries)[i].git_status[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*entries)[i].git_status[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>relative<sp/>path<sp/>for<sp/>the<sp/>current<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>relative_path[<ref refid="db/d45/git__utils_8h_1abe0ec333b60117063f9b9fd9f849cb08" kindref="member">MAX_FILENAME</ref>];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(relative_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(relative_path),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>dir_name,<sp/>(*entries)[i].name);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>file&apos;s<sp/>path<sp/>with<sp/>Git<sp/>status<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a8a2892f47d399a67ce95ecdf0ab4a79f" kindref="member">count</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>paths<sp/>match,<sp/>update<sp/>the<sp/>Git<sp/>status<sp/>in<sp/>the<sp/>file<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(relative_path,<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" kindref="member">files</ref>[j].<ref refid="d1/d46/structGitFile_1a822b94e2dcbcc4086c35387aef4f4a57" kindref="member">filename</ref>)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp((*entries)[i].name,<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" kindref="member">files</ref>[j].<ref refid="d1/d46/structGitFile_1a822b94e2dcbcc4086c35387aef4f4a57" kindref="member">filename</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*entries)[i].git_status[0]<sp/>=<sp/>git_status.<ref refid="da/ddb/structGitFileList_1a66fb028701c6d829b9a0720baa4adb76" kindref="member">files</ref>[j].<ref refid="d1/d46/structGitFile_1ac3e25bcf3aad47f8c13f3a98f250b874" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*entries)[i].git_status[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>searching<sp/>once<sp/>a<sp/>match<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>base<sp/>directory<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>free(base_dir);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.c"/>
  </compounddef>
</doxygen>
