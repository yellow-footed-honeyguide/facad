<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="da/d7e/args__parser_8h" kind="file" language="C++">
    <compoundname>args_parser.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includedby refid="df/dad/args__parser_8c" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c</includedby>
    <includedby refid="d0/d29/main_8c" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h</label>
        <link refid="da/d7e/args__parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c</label>
        <link refid="df/dad/args__parser_8c"/>
      </node>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h</label>
        <link refid="da/d7e/args__parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c</label>
        <link refid="d0/d29/main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d26/structCommandLineArgs" prot="public">CommandLineArgs</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="da/d7e/args__parser_8h_1ae69db95445b885f269cab7f4dc062307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref></type>
        <definition>CommandLineArgs parse_args</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>parse_args</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Parses command-line arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>This function processes the command-line arguments, setting appropriate flags in the <ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> structure and collecting non-option arguments as targets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command-line arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of strings containing the command-line arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> structure containing the parsed arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" line="46" column="17" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c" bodystart="43" bodyend="67" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" declline="46" declcolumn="17"/>
        <references refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" compoundref="da/d7e/args__parser_8h" startline="31">CommandLineArgs::invalid_opt</references>
        <references refid="de/d26/structCommandLineArgs_1ab399696f534705c62ec3d5ba045eed09" compoundref="da/d7e/args__parser_8h" startline="30">CommandLineArgs::show_dir_analytics</references>
        <references refid="de/d26/structCommandLineArgs_1a210deb76b4bf3d30f0bb09e16ba7fbe4" compoundref="da/d7e/args__parser_8h" startline="28">CommandLineArgs::show_help</references>
        <references refid="de/d26/structCommandLineArgs_1ab86308b944cadea1ed5fb0b48661a355" compoundref="da/d7e/args__parser_8h" startline="29">CommandLineArgs::show_longlisting</references>
        <references refid="de/d26/structCommandLineArgs_1a518fe65eec71814dec37b3fb872fa8a0" compoundref="da/d7e/args__parser_8h" startline="27">CommandLineArgs::show_version</references>
        <references refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" compoundref="da/d7e/args__parser_8h" startline="33">CommandLineArgs::target_count</references>
        <references refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" compoundref="da/d7e/args__parser_8h" startline="32">CommandLineArgs::targets</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d7e/args__parser_8h_1a1e124c87a6ba6ffa680d9297fbc17d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_args</definition>
        <argsstring>(CommandLineArgs *args)</argsstring>
        <name>free_args</name>
        <param>
          <type><ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Frees memory allocated for command-line arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>This function releases the memory allocated for the targets array in the <ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> structure to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" line="56" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c" bodystart="77" bodyend="82" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" declline="56" declcolumn="6"/>
        <references refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" compoundref="da/d7e/args__parser_8h" startline="32">CommandLineArgs::targets</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d7e/args__parser_8h_1ac6230d495fc909bb61195c45f703d492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_version</definition>
        <argsstring>(void)</argsstring>
        <name>print_version</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Prints the version information of facad. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays the version number of the facad program.</para>
<para>This function displays the version number of the facad program, which is defined in the config.h file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" line="63" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c" bodystart="90" bodyend="92" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" declline="63" declcolumn="6"/>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d7e/args__parser_8h_1ae5d62d86e562ee295d1566f9ad74b73c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_help</definition>
        <argsstring>(const char *program_name)</argsstring>
        <name>print_help</name>
        <param>
          <type>const char *</type>
          <declname>program_name</declname>
        </param>
        <briefdescription>
<para>Prints the help information for facad. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays usage information and available options for the facad program.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>program_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the program executable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" line="73" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c" bodystart="102" bodyend="111" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" declline="73" declcolumn="6"/>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d7e/args__parser_8h_1ac7b851d3c3ad6d7a78c3e0aabb176d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_glob_pattern</definition>
        <argsstring>(const char *str)</argsstring>
        <name>is_glob_pattern</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Checks if a string is a glob pattern. </para>
        </briefdescription>
        <detaileddescription>
<para>This function determines whether a given string contains wildcard characters used in glob patterns.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to check for glob pattern characters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the string contains glob pattern characters, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" line="84" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.c" bodystart="28" bodyend="31" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h" declline="84" declcolumn="6"/>
        <referencedby refid="d0/d29/main_8c_1a116587b452eeb0a0e9f7d9602ba67ae0" compoundref="d0/d29/main_8c" startline="255" endline="262">is_glob_or_specific_files</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header file for command-line argument parsing in facad. </para>
    </briefdescription>
    <detaileddescription>
<para>This file declares structures and functions for parsing and handling command-line arguments in the facad directory listing tool. It defines the <ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref> structure and related functions for argument processing.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>args_parser.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Header<sp/>file<sp/>for<sp/>command-line<sp/>argument<sp/>parsing<sp/>in<sp/>facad.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>declares<sp/>structures<sp/>and<sp/>functions<sp/>for<sp/>parsing<sp/>and<sp/>handling</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>command-line<sp/>arguments<sp/>in<sp/>the<sp/>facad<sp/>directory<sp/>listing<sp/>tool.<sp/>It<sp/>defines</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>CommandLineArgs<sp/>structure<sp/>and<sp/>related<sp/>functions<sp/>for<sp/>argument<sp/>processing.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARGS_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGS_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>for<sp/>boolean<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@struct<sp/>CommandLineArgs</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Structure<sp/>to<sp/>hold<sp/>parsed<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>This<sp/>structure<sp/>stores<sp/>flags<sp/>for<sp/>various<sp/>options<sp/>and<sp/>an<sp/>array<sp/>of<sp/>target</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>directories<sp/>or<sp/>files<sp/>specified<sp/>in<sp/>the<sp/>command<sp/>line.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="de/d26/structCommandLineArgs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="de/d26/structCommandLineArgs_1a518fe65eec71814dec37b3fb872fa8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d26/structCommandLineArgs_1a518fe65eec71814dec37b3fb872fa8a0" kindref="member">show_version</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>show<sp/>version<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="de/d26/structCommandLineArgs_1a210deb76b4bf3d30f0bb09e16ba7fbe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d26/structCommandLineArgs_1a210deb76b4bf3d30f0bb09e16ba7fbe4" kindref="member">show_help</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>show<sp/>help<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="de/d26/structCommandLineArgs_1ab86308b944cadea1ed5fb0b48661a355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d26/structCommandLineArgs_1ab86308b944cadea1ed5fb0b48661a355" kindref="member">show_longlisting</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>show<sp/>detailed<sp/>directory<sp/>listing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="de/d26/structCommandLineArgs_1ab399696f534705c62ec3d5ba045eed09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d26/structCommandLineArgs_1ab399696f534705c62ec3d5ba045eed09" kindref="member">show_dir_analytics</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>show<sp/>directory<sp/>analytics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="de/d26/structCommandLineArgs_1a279e4f9d5bd585e348c74ab980bc6ad0" kindref="member">invalid_opt</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>any<sp/>invalid<sp/>option<sp/>encountered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="de/d26/structCommandLineArgs_1a24eadec0753883664957eb8322579c25" kindref="member">targets</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>target<sp/>directories<sp/>or<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/d26/structCommandLineArgs_1a5185c801bf6373761724b96d20f05aeb" kindref="member">target_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>targets<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Parses<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>processes<sp/>the<sp/>command-line<sp/>arguments,<sp/>setting<sp/>appropriate<sp/>flags</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>CommandLineArgs<sp/>structure<sp/>and<sp/>collecting<sp/>non-option<sp/>arguments<sp/>as<sp/>targets.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>@param<sp/>argc<sp/>The<sp/>number<sp/>of<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>@param<sp/>argv<sp/>An<sp/>array<sp/>of<sp/>strings<sp/>containing<sp/>the<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>CommandLineArgs<sp/>structure<sp/>containing<sp/>the<sp/>parsed<sp/>arguments.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref><sp/><ref refid="da/d7e/args__parser_8h_1ae69db95445b885f269cab7f4dc062307" kindref="member">parse_args</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Frees<sp/>memory<sp/>allocated<sp/>for<sp/>command-line<sp/>arguments.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>releases<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>targets<sp/>array</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>CommandLineArgs<sp/>structure.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@param<sp/>args<sp/>Pointer<sp/>to<sp/>the<sp/>CommandLineArgs<sp/>structure<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d7e/args__parser_8h_1a1e124c87a6ba6ffa680d9297fbc17d43" kindref="member">free_args</ref>(<ref refid="de/d26/structCommandLineArgs" kindref="compound">CommandLineArgs</ref><sp/>*args);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Prints<sp/>the<sp/>version<sp/>information<sp/>of<sp/>facad.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>displays<sp/>the<sp/>version<sp/>number<sp/>of<sp/>the<sp/>facad<sp/>program.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d7e/args__parser_8h_1ac6230d495fc909bb61195c45f703d492" kindref="member">print_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Prints<sp/>the<sp/>help<sp/>information<sp/>for<sp/>facad.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>displays<sp/>usage<sp/>information<sp/>and<sp/>available<sp/>options</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>facad<sp/>program.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>@param<sp/>program_name<sp/>The<sp/>name<sp/>of<sp/>the<sp/>program<sp/>executable.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d7e/args__parser_8h_1ae5d62d86e562ee295d1566f9ad74b73c" kindref="member">print_help</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*program_name);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Checks<sp/>if<sp/>a<sp/>string<sp/>is<sp/>a<sp/>glob<sp/>pattern.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>determines<sp/>whether<sp/>a<sp/>given<sp/>string<sp/>contains</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>wildcard<sp/>characters<sp/>used<sp/>in<sp/>glob<sp/>patterns.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@param<sp/>str<sp/>The<sp/>string<sp/>to<sp/>check<sp/>for<sp/>glob<sp/>pattern<sp/>characters.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>string<sp/>contains<sp/>glob<sp/>pattern<sp/>characters,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d7e/args__parser_8h_1ac7b851d3c3ad6d7a78c3e0aabb176d15" kindref="member">is_glob_pattern</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ARGS_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/args_parser.h"/>
  </compounddef>
</doxygen>
