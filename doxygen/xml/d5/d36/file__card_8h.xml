<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d5/d36/file__card_8h" kind="file" language="C++">
    <compoundname>file_card.h</compoundname>
    <includedby refid="db/d03/dev__dir__utils_8h" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.h</includedby>
    <includedby refid="d2/dda/display__utils_8c" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/display_utils.c</includedby>
    <includedby refid="d3/df8/display__utils_8h" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/display_utils.h</includedby>
    <includedby refid="dd/d6c/file__card_8c" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.c</includedby>
    <includedby refid="d1/dc4/git__integration_8h" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.h</includedby>
    <includedby refid="d0/d29/main_8c" local="yes">/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c</includedby>
    <invincdepgraph>
      <node id="3">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.c</label>
        <link refid="de/db5/dev__dir__utils_8c"/>
      </node>
      <node id="2">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/dev_dir_utils.h</label>
        <link refid="db/d03/dev__dir__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/display_utils.c</label>
        <link refid="d2/dda/display__utils_8c"/>
      </node>
      <node id="6">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/display_utils.h</label>
        <link refid="d3/df8/display__utils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.c</label>
        <link refid="dd/d6c/file__card_8c"/>
      </node>
      <node id="1">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h</label>
        <link refid="d5/d36/file__card_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.c</label>
        <link refid="df/d77/git__integration_8c"/>
      </node>
      <node id="8">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/git_integration.h</label>
        <link refid="d1/dc4/git__integration_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/honeyguide/Desktop/MyOpenSource/facad/src/main.c</label>
        <link refid="d0/d29/main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d0d/structFileCardInfo" prot="public">FileCardInfo</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/d36/file__card_8h_1a8ac3f1a318ebad42a9d465b92e4aa598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_file_entry</definition>
        <argsstring>(FileCardInfo *entry, const char *path)</argsstring>
        <name>create_file_entry</name>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Creates a file entry based on the given path. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure with information about the file, including its name, emoji representation, and flags for directory and hidden status.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure to be filled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file to analyze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, non-zero on error.</para>
</simplesect>
Creates a file entry based on the given path.</para>
<para>This function initializes a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure with information about the file, including its name, emoji representation, and flags for directory and hidden status.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure to be filled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file to analyze. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" line="44" column="5" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.c" bodystart="31" bodyend="54" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" declline="44" declcolumn="5"/>
        <references refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" compoundref="d5/d36/file__card_8h" startline="28">FileCardInfo::emoji</references>
        <references refid="d0/dc9/emoji__utils_8c_1a853b78da7b6116949e96148e040669d5" compoundref="d0/dc9/emoji__utils_8c" startline="95" endline="158">get_emoji</references>
        <references refid="de/d0d/structFileCardInfo_1a194c96b36719d8cfefd81e58c527668c" compoundref="d5/d36/file__card_8h" startline="31">FileCardInfo::git_status</references>
        <references refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" compoundref="d5/d36/file__card_8h" startline="29">FileCardInfo::is_directory</references>
        <references refid="de/d0d/structFileCardInfo_1a0976436903b23e6cdd4deb1052b8e6ab" compoundref="d5/d36/file__card_8h" startline="30">FileCardInfo::is_hidden</references>
        <references refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" compoundref="d5/d36/file__card_8h" startline="27">FileCardInfo::name</references>
        <referencedby refid="d0/d29/main_8c_1acc392fbd2ea6b07ebcc2b9c089aae2ca" compoundref="d0/d29/main_8c" startline="78" endline="119">process_directory</referencedby>
        <referencedby refid="d0/d29/main_8c_1a00c65357e9fe949388102f3090ea09c5" compoundref="d0/d29/main_8c" startline="134" endline="177">process_files_or_patterns</referencedby>
        <referencedby refid="d0/d29/main_8c_1ae7d3bb334fabeeccc7dfb05e7f968d47" compoundref="d0/d29/main_8c" startline="204" endline="243">process_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d36/file__card_8h_1af25b4091089527258ab9a8cb5ebff9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_file_entry</definition>
        <argsstring>(FileCardInfo *entry)</argsstring>
        <name>free_file_entry</name>
        <param>
          <type><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Frees the memory allocated for a file entry. </para>
        </briefdescription>
        <detaileddescription>
<para>This function releases the memory allocated for the name and emoji fields of a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure to free.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Frees the memory allocated for a file entry.</para>
<para>This function releases the memory allocated for the name and emoji fields of a <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" line="54" column="6" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.c" bodystart="64" bodyend="68" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" declline="54" declcolumn="6"/>
        <references refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" compoundref="d5/d36/file__card_8h" startline="28">FileCardInfo::emoji</references>
        <references refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" compoundref="d5/d36/file__card_8h" startline="27">FileCardInfo::name</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d36/file__card_8h_1aaa0d8cd7d720e6b260615df1be0fdc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compare_file_entries</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>compare_file_entries</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Compares two file entries for sorting purposes. </para>
        </briefdescription>
        <detaileddescription>
<para>This function implements the sorting logic for file entries. It prioritizes:<orderedlist>
<listitem><para>Directories before files</para>
</listitem><listitem><para>Hidden entries before non-hidden entries</para>
</listitem><listitem><para>Alphabetical order (case-insensitive) for entries of the same type</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A negative value if a should come before b, a positive value if b should come before a, or 0 if they are equivalent.</para>
</simplesect>
Compares two file entries for sorting purposes.</para>
<para>This function implements the sorting logic for file entries:<orderedlist>
<listitem><para>Directories before files</para>
</listitem><listitem><para>Within directories and files, dotfiles (hidden) before non-dotfiles</para>
</listitem><listitem><para>Files sorted by extension</para>
</listitem><listitem><para>Alphabetical sorting within the same type and extension</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer less than, equal to, or greater than zero if a is found, respectively, to be less than, to match, or be greater than b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" line="70" column="5" bodyfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.c" bodystart="134" bodyend="171" declfile="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h" declline="70" declcolumn="5"/>
        <references refid="dd/d6c/file__card_8c_1a6cc6fb631e1f28a066db43ca077cdd83" compoundref="dd/d6c/file__card_8c" startline="79" endline="87">get_extension</references>
        <references refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" compoundref="d5/d36/file__card_8h" startline="29">FileCardInfo::is_directory</references>
        <references refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" compoundref="d5/d36/file__card_8h" startline="27">FileCardInfo::name</references>
        <references refid="dd/d6c/file__card_8c_1ab53dd5e9229168ae3ea9dd6718dc2eb8" compoundref="dd/d6c/file__card_8c" startline="100" endline="118">strcasecmp_wrapper</references>
        <referencedby refid="d0/d29/main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="d0/d29/main_8c" startline="275" endline="423">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header file for file entry handling functions and structures. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the definition of the <ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref> structure and declarations for functions that manipulate file entries. It provides the interface for creating, freeing, and comparing file entries in the facad directory listing tool.</para>
<para><simplesect kind="author"><para>Sergey Veneckiy </para>
</simplesect>
<simplesect kind="date"><para>2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/>file_card.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Header<sp/>file<sp/>for<sp/>file<sp/>entry<sp/>handling<sp/>functions<sp/>and<sp/>structures.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>definition<sp/>of<sp/>the<sp/>FileCardInfo<sp/>structure<sp/>and</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>declarations<sp/>for<sp/>functions<sp/>that<sp/>manipulate<sp/>file<sp/>entries.<sp/>It<sp/>provides</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>interface<sp/>for<sp/>creating,<sp/>freeing,<sp/>and<sp/>comparing<sp/>file<sp/>entries<sp/>in</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>facad<sp/>directory<sp/>listing<sp/>tool.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@author<sp/>Sergey<sp/>Veneckiy</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FILE_ENTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILE_ENTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@struct<sp/>FileCardInfo</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Structure<sp/>representing<sp/>a<sp/>file<sp/>entry<sp/>with<sp/>its<sp/>properties.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>This<sp/>structure<sp/>holds<sp/>all<sp/>the<sp/>necessary<sp/>information<sp/>about<sp/>a<sp/>file<sp/>or<sp/>directory</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>entry,<sp/>including<sp/>its<sp/>name,<sp/>associated<sp/>emoji,<sp/>and<sp/>various<sp/>flags<sp/>indicating</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>its<sp/>properties.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="de/d0d/structFileCardInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="de/d0d/structFileCardInfo_1a3c0477ce53183f2738943d953f7baa55" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Name<sp/>of<sp/>the<sp/>file<sp/>or<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="de/d0d/structFileCardInfo_1a7f0da0b8251b0c10f77a559d80eb567c" kindref="member">emoji</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Emoji<sp/>representation<sp/>of<sp/>the<sp/>file<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/d0d/structFileCardInfo_1aa328a53a5e7138dbeb6992f00d6b89ad" kindref="member">is_directory</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Flag<sp/>indicating<sp/>whether<sp/>the<sp/>entry<sp/>is<sp/>a<sp/>directory<sp/>(1)<sp/>or<sp/>not<sp/>(0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="de/d0d/structFileCardInfo_1a0976436903b23e6cdd4deb1052b8e6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/d0d/structFileCardInfo_1a0976436903b23e6cdd4deb1052b8e6ab" kindref="member">is_hidden</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Flag<sp/>indicating<sp/>whether<sp/>the<sp/>entry<sp/>is<sp/>hidden<sp/>(1)<sp/>or<sp/>not<sp/>(0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="de/d0d/structFileCardInfo_1a194c96b36719d8cfefd81e58c527668c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>git_status[2];<sp/></highlight><highlight class="comment">/**&lt;<sp/>Git<sp/>status<sp/>of<sp/>the<sp/>file<sp/>(if<sp/>applicable)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Creates<sp/>a<sp/>file<sp/>entry<sp/>based<sp/>on<sp/>the<sp/>given<sp/>path.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>initializes<sp/>a<sp/>FileCardInfo<sp/>structure<sp/>with<sp/>information<sp/>about<sp/>the<sp/>file,</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>including<sp/>its<sp/>name,<sp/>emoji<sp/>representation,<sp/>and<sp/>flags<sp/>for<sp/>directory<sp/>and<sp/>hidden<sp/>status.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>@param<sp/>entry<sp/>Pointer<sp/>to<sp/>a<sp/>FileCardInfo<sp/>structure<sp/>to<sp/>be<sp/>filled.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>Path<sp/>of<sp/>the<sp/>file<sp/>to<sp/>analyze.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>on<sp/>success,<sp/>non-zero<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d36/file__card_8h_1a8ac3f1a318ebad42a9d465b92e4aa598" kindref="member">create_file_entry</ref>(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*entry,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Frees<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>a<sp/>file<sp/>entry.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>releases<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>name<sp/>and<sp/>emoji<sp/>fields</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>of<sp/>a<sp/>FileCardInfo<sp/>structure.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@param<sp/>entry<sp/>Pointer<sp/>to<sp/>the<sp/>FileCardInfo<sp/>structure<sp/>to<sp/>free.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d36/file__card_8h_1af25b4091089527258ab9a8cb5ebff9e7" kindref="member">free_file_entry</ref>(<ref refid="de/d0d/structFileCardInfo" kindref="compound">FileCardInfo</ref><sp/>*entry);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compares<sp/>two<sp/>file<sp/>entries<sp/>for<sp/>sorting<sp/>purposes.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>implements<sp/>the<sp/>sorting<sp/>logic<sp/>for<sp/>file<sp/>entries.<sp/>It<sp/>prioritizes:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>1.<sp/>Directories<sp/>before<sp/>files</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>2.<sp/>Hidden<sp/>entries<sp/>before<sp/>non-hidden<sp/>entries</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>3.<sp/>Alphabetical<sp/>order<sp/>(case-insensitive)<sp/>for<sp/>entries<sp/>of<sp/>the<sp/>same<sp/>type</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@param<sp/>a<sp/>Pointer<sp/>to<sp/>the<sp/>first<sp/>FileCardInfo<sp/>structure.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@param<sp/>b<sp/>Pointer<sp/>to<sp/>the<sp/>second<sp/>FileCardInfo<sp/>structure.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>negative<sp/>value<sp/>if<sp/>a<sp/>should<sp/>come<sp/>before<sp/>b,</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>positive<sp/>value<sp/>if<sp/>b<sp/>should<sp/>come<sp/>before<sp/>a,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>they<sp/>are<sp/>equivalent.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d36/file__card_8h_1aaa0d8cd7d720e6b260615df1be0fdc7f" kindref="member">compare_file_entries</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FILE_ENTRY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/honeyguide/Desktop/MyOpenSource/facad/src/file_card.h"/>
  </compounddef>
</doxygen>
